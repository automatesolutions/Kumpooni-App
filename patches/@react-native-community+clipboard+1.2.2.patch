diff --git a/node_modules/@react-native-community/clipboard/android/src/main/java/com/reactnativecommunity/clipboard/ClipboardModule.java b/node_modules/@react-native-community/clipboard/android/src/main/java/com/reactnativecommunity/clipboard/ClipboardModule.java
index baa4dfe..347918f 100644
--- a/node_modules/@react-native-community/clipboard/android/src/main/java/com/reactnativecommunity/clipboard/ClipboardModule.java
+++ b/node_modules/@react-native-community/clipboard/android/src/main/java/com/reactnativecommunity/clipboard/ClipboardModule.java
@@ -11,7 +11,8 @@ import android.content.ClipboardManager;
 import android.content.ClipData;
 import android.content.Context;
 
-import com.facebook.react.bridge.ContextBaseJavaModule;
+import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.ReactContextBaseJavaModule;
 import com.facebook.react.bridge.ReactMethod;
 import com.facebook.react.bridge.Promise;
 import com.facebook.react.module.annotations.ReactModule;
@@ -20,10 +21,10 @@ import com.facebook.react.module.annotations.ReactModule;
  * A module that allows JS to get/set clipboard contents.
  */
 @ReactModule(name = ClipboardModule.NAME)
-public class ClipboardModule extends ContextBaseJavaModule {
+public class ClipboardModule extends ReactContextBaseJavaModule {
 
   public ClipboardModule(Context context) {
-    super(context);
+    super(new ReactApplicationContext(context));
   }
 
   public static final String NAME = "RNCClipboard";
@@ -34,7 +35,7 @@ public class ClipboardModule extends ContextBaseJavaModule {
   }
 
   private ClipboardManager getClipboardService() {
-    return (ClipboardManager) getContext().getSystemService(getContext().CLIPBOARD_SERVICE);
+    return (ClipboardManager) getReactApplicationContext().getSystemService(getReactApplicationContext().CLIPBOARD_SERVICE);
   }
 
   @ReactMethod
@@ -59,4 +60,15 @@ public class ClipboardModule extends ContextBaseJavaModule {
     ClipboardManager clipboard = getClipboardService();
     clipboard.setPrimaryClip(clipdata);
   }
+
+  @ReactMethod
+  public void hasString(Promise promise) {
+    try {
+      ClipboardManager clipboard = getClipboardService();
+      ClipData clipData = clipboard.getPrimaryClip();
+      promise.resolve(clipData != null && clipData.getItemCount() >= 1);
+    } catch (Exception e) {
+      promise.reject(e);
+    }
+  }
 }
\ No newline at end of file
